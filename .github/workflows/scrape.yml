name: Real Estate Scraper
on:
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-22.04
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repo

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: repo/scripts/package-lock.json

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 libxss1 libasound2 libgbm1 \
            libdrm2 libxkbcommon0 libatk1.0-0 \
            libatk-bridge2.0-0 libx11-xcb1 \
            libxcomposite1 libxdamage1 libxfixes3 \
            libxrandr2 libxv1 xvfb \
            libpangocairo-1.0-0 libgtk-3-0 \
            fonts-noto-color-emoji fonts-freefont-ttf \
            libgl1-mesa-glx

      - name: Install project dependencies
        working-directory: repo/scripts
        run: |
          npm install --prefix . \
            puppeteer-core@21.9.0 \
            @sparticuz/chromium@114.0.0 \
            tough-cookie@4.1.3 \
            axios-cookiejar-support@2.0.3 \
            firebase-admin@12.1.0 \
            cheerio@1.0.0 \
            axios@1.6.2
          npm cache clean --force

      - name: Run scraper
        working-directory: repo/scripts
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
          NODE_OPTIONS: "--max-old-space-size=6144"
        run: |
          # Force cleanup
          pkill -9 -f chromium || true
          pkill -9 -f Xvfb || true
          
          # Start virtual display
          Xvfb :99 -screen 0 1280x1024x16 &
          export DISPLAY=:99
          
          # Run scraper with extended timeout
          DEBUG="puppeteer:*" timeout --kill-after=7m 35m node scraper.js || EXIT_CODE=$?
          
          # Preserve debug artifacts
          mkdir -p ../debug
          [ -f debug-page.png ] && mv debug-page.png ../debug/
          
          # Final cleanup
          pkill -9 -f chromium || true
          pkill -9 -f Xvfb || true
          exit ${EXIT_CODE:-0}

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scraper-debug
          path: repo/debug/debug-page.png
          retention-days: 1